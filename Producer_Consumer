#include<stdio.h>
#include<semaphore.h>
#include<stdlib.h>
#include<pthread.h>
#include<unistd.h>
sem_t e,f,s;
int data[5],in=0,out=0;
void *producer(void *arg)
{
	sem_wait(&e);
	sem_wait(&s);
	data[in]=rand();
	in=(in+1)%5;
	sem_post(&s);
	sem_post(&f);
	printf("Producer Executed \n");
}
void *consumer (void *arg)
{
	int val;
	do
	{
		sem_wait(&f);
		sem_wait(&s);
		val=data[out];
		printf("Consumer executed \n");
		out=(out+1)%5;
		sem_post(&s);
		sem_post(&e);
		sem_getvalue(&e,&val);
	}while(val!=5);
}
void main()
{
	pthread_t tid[10],c;
	int i,j;
	sem_init(&f,0,0);
	sem_init(&e,0,5);
	sem_init(&s,0,1);
	pthread_create(&c,NULL,consumer,NULL);
	for(int i=0;i<5;i++)
	{
		pthread_create(&tid[i],NULL,producer,NULL);
	}
	pthread_join(c,NULL);
	for(i=0;i<5;i++)
	{
		pthread_join(tid[i],NULL);
	}
}
/*Output:
student@student:~$ gcc ProCon.c -lpthread
student@student:~$ gcc ProCon.c -lpthread
student@student:~$ ./a.out
Producer Executed 
Consumer executed 
Consumer executed 
Producer Executed 
Consumer executed 
Producer Executed 
Producer Executed 
Consumer executed 
Producer Executed 
Consumer executed */
